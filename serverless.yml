# ----------------------- #
# Serverless Service Name #
# ----------------------- #

service: skip-patching-from-criterion-lambda-project

# ------------------------- #
# Framework Version Setting #
# ------------------------- #

frameworkVersion: '^2.6.0'

# ---------------------- #
# Plugins For Serverless #
# ---------------------- #

plugins:
  - serverless-cloudformation-sub-variables
  - serverless-plugin-lambda-dead-letter
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-2
  logRetentionInDays: 14
  lambdaHashingVersion: 20201221
  tags:
    Company: DevOpsGroup
    Environment: ${opt:stage}
    Region: ${aws:region}
  iam:
    role: LambdaIAMRole                                                  

# ------------------------- #
# Lambda Function Resources #
# ------------------------- #

functions:
  SkipPatching:
    name: 'Skip-Patching-Lambda-Function-${aws:accountId}-${aws:region}'
    handler: "functions/skip/handler.skip"
    memorySize: 512
    environment:
          TAGS: 'MS-CC, MS-GS, MS-HA-KS, MS-KS'
          REGION: ${aws:region}
# Deadletter plugin currently broken in serverless 2.x fix currently open at: https://github.com/gmetzker/serverless-plugin-lambda-dead-letter/issues/46
    # deadLetter:
    #   targetArn:
    #     GetResourceArn: !Ref SkipPatchingLambdaDLQ


# ------------------------ #
# CloudFormation Resources #
# ------------------------ #

resources:
  Resources:
    LambdaIAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: 'Skip-Patching-Lambda-execution-role-${aws:accountId}-${aws:region}'
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: 
                - sts:AssumeRole
            - Effect: Allow
              Principal:
                Service:
                  - cloudwatch.amazonaws.com
              Action:
                - sts:AssumeRole     
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole  
            - Effect: Allow
              Principal:
                Service:
                  -  ec2.amazonaws.com
              Action:
                - sts:AssumeRole      
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        Policies:
          - PolicyName: SkipPatching-Lambda-Execution-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:DescribeLogGroups
                  Resource: 'arn:aws:logs:${aws:region}:${aws:accountId}:log-group:*'
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource: 'arn:aws:logs:${aws:region}:${aws:accountId}:log-group:*:log-stream:*'
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                    - lambda:InvokeAsync
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - ec2:Describe*
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - cloudwatch:PutMetricData
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - ec2:CreateTags
                  Resource: 'arn:aws:ec2:${aws:region}:${aws:accountId}:instance/*'
# Deadletter plugin currently broken in serverless 2.x fix currently open at: https://github.com/gmetzker/serverless-plugin-lambda-dead-letter/issues/46
    # SkipPatchingLambdaDLQ:
    #   Type: AWS::SQS::Queue
    #   Properties:
    #     QueueName: 'Skip-Patching-Lambda-DLQ-${aws:accountId}-${aws:region}'

